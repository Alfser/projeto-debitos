services:
  mongodb:
    container_name: mongodb
    image: mongo:8
    restart: always
    ports:
      - ${MONGO_PORT:-27017}:27017
    volumes:
      - mongo_data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    env_file:
      - .env

  kafka-broker:
    image: apache/kafka:4.0.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_ADVERTISED_IP:-broker}:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    working_dir: /opt/kafka/bin
    ports:
      - "9092:9092"
    env_file:
      - .env
    networks:
      - kafka-net
    healthcheck:
      test: [ "CMD", "kafka-topics", "--list", "--bootstrap-server", "broker:9092" ]
      interval: 5s
      timeout: 10s
      retries: 10

  servico-gera-pagamentos:
    build:
      context: gera-pagamentos/Dockerfile
    env_file:
      - .env
    image: backend-pagamento
    restart: always
    environment:
      - TZ=America/Belem
    networks:
      - default
      - kafka-net
    depends_on:
      - mongodb
      - kafka-broker
  
  servico-processa-pagamentos:
    build:
      context: processa-pagamentos/Dockerfile
    env_file:
      - .env
    image: backend-pagamento
    restart: always
    environment:
      - TZ=America/Belem
    networks:
      - default
      - kafka-net
    depends_on:
      - mongodb
      - kafka-broker

volumes:
  mongo_data:
    driver: local

networks:
  kafka-net:
    driver: bridge